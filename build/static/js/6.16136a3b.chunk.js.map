{"version":3,"sources":["helper/flightHelper.js"],"names":["getAmenities","items","flightamenities","filter","item","includes","id","getAirlines","flightairlines","getRoute","flightroute","getType","flighttype","getFlight","flightblock","flight","parseInt","getRecentFlight","timestamp","Date","flightdate","getFilteredFlight","flights","priceFilter","priceFilterValue","undefined","price","today","slice","map","month","getTime","getDate","getMonth","getFullYear","setDemoDate"],"mappings":"wz2BAAA,wSASA,SAASA,EAAaC,GAIlB,OAHYC,EAAgBC,QAAO,SAACC,GAChC,OAAOH,EAAMI,SAASD,EAAKE,GAC/B,GAEJ,CASA,SAASC,EAAYN,GAIjB,OAHYO,EAAeL,QAAO,SAACC,GAC/B,OAAOH,EAAMI,SAASD,EAAKE,GAC/B,GAEJ,CAEA,SAASG,EAASR,GAId,OAHYS,EAAYP,QAAO,SAACC,GAC5B,OAAOH,EAAMI,SAASD,EAAKE,GAC/B,GAEJ,CAEA,SAASK,EAAQV,GAIb,OAHYW,EAAWT,QAAO,SAACC,GAC3B,OAAOH,EAAMI,SAASD,EAAKE,GAC/B,GAEJ,CASA,SAASO,EAAUP,GACf,OAAOQ,EAAYX,QAAO,SAAAY,GAAY,OAAOA,EAAOT,KAAOU,SAASV,EAAI,IAAG,EAC/E,CAqBA,SAASW,IAIL,OAHYH,EAAYX,QAAO,SAAAY,GAC3B,OAAOA,EAAOG,UAAY,IAAIC,KAAKJ,EAAOK,WAC9C,GAEJ,CAGA,SAASC,EAAkBC,GAAwC,IAA/BnB,EAAM,uDAAG,CAAEoB,YAAa,IACpDC,OAA6CC,IAA1BtB,EAAOoB,YAAY,SAA8CE,IAA1BtB,EAAOoB,YAAY,IAA8C,OAA1BpB,EAAOoB,YAAY,IAAwC,MAAzBpB,EAAOoB,YAAY,IAAwC,KAA1BpB,EAAOoB,YAAY,IAAuC,KAA1BpB,EAAOoB,YAAY,GAO3N,OALIC,IACAF,EAAUA,EAAQnB,QAAO,SAAAY,GACrB,YAAyBU,IAAjBV,EAAOW,OAAwC,OAAjBX,EAAOW,OAAmBX,EAAOW,MAAQvB,EAAOoB,YAAY,IAAMR,EAAOW,OAASvB,EAAOoB,YAAY,EAC/I,KAEGD,CACX,EA3BA,WACI,IAAIK,EAAQ,IAAIR,KAChBL,EAAYc,MAAM,EAAG,GAAGC,KAAI,SAACd,GANjC,IAAuBe,EAWf,OAJAf,EAAOG,UAAYS,EAAMI,UAAa,OAGtChB,EAAOK,WAAU,UAAMO,EAAMK,UAAS,aAVvBF,EAUyCH,EAAMM,WATrD,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC9GH,IAQ+D,aAAKH,EAAMO,eAC7EnB,CACX,GACJ,CAOAoB,E","file":"static/js/6.16136a3b.chunk.js","sourcesContent":["import flightblock from '../data/flights/flight.json';\r\nimport flightaccomodation from '../data/flights/accomondation.json';\r\nimport flightairlines from '../data/flights/airlines.json';\r\nimport flightamenities from '../data/flights/amenities.json';\r\nimport flightroute from '../data/flights/flightroute.json';\r\nimport flighttype from '../data/flights/flighttype.json';\r\nimport flightstops from '../data/flights/stops.json';\r\n\r\n// Amenities\r\nfunction getAmenities(items) {\r\n    var elems = flightamenities.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Accomodation\r\nfunction getAccomodation(items) {\r\n    var elems = flightaccomodation.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Airlines\r\nfunction getAirlines(items) {\r\n    var elems = flightairlines.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Route\r\nfunction getRoute(items) {\r\n    var elems = flightroute.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Type\r\nfunction getType(items) {\r\n    var elems = flighttype.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Stops\r\nfunction getStops(items) {\r\n    var elems = flightstops.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Flight details\r\nfunction getFlight(id) {\r\n    return flightblock.filter(flight => { return flight.id === parseInt(id) })[0];\r\n}\r\n// Related flight\r\nfunction getFlightByCategory(items, pageRoute) {\r\n    var elems = flightblock.filter((flight) => { return parseInt(flight.id) !== parseInt(pageRoute) && flight.category.some(r => items.includes(r)) });\r\n    return elems;\r\n}\r\n// Recent Flight\r\nfunction changeToMonth(month) {\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    return months[month];\r\n}\r\nfunction setDemoDate() {\r\n    var today = new Date();\r\n    flightblock.slice(0, 5).map((flight) => {\r\n        flight.timestamp = today.getTime() - (3 * 24 * 60 * 60 * 1000);\r\n        // Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\r\n        // in the flight.json object\r\n        flight.flightdate = `${today.getDate()} ${changeToMonth(today.getMonth())}, ${today.getFullYear()}`;\r\n        return flight;\r\n    });\r\n}\r\nfunction getRecentFlight() {\r\n    var elems = flightblock.filter(flight => {\r\n        return flight.timestamp < new Date(flight.flightdate);\r\n    });\r\n    return elems;\r\n}\r\nsetDemoDate();\r\n// Filter\r\nfunction getFilteredFlight(flights, filter = { priceFilter: [] }) {\r\n    var priceFilterValue = filter.priceFilter[0] !== undefined && filter.priceFilter[1] !== undefined && filter.priceFilter[0] !== null && filter.priceFilter[1] != null && filter.priceFilter[0] !== '' && filter.priceFilter[1] !== '';\r\n    // Price Filter\r\n    if (priceFilterValue) {\r\n        flights = flights.filter(flight => {\r\n            return (flight.price !== undefined && flight.price !== null) && flight.price > filter.priceFilter[0] && flight.price <= filter.priceFilter[1]\r\n        })\r\n    }\r\n    return flights;\r\n}\r\nexport { getAmenities, getAccomodation, getAirlines, getRoute, getType, getFlight, getStops, getFlightByCategory, getRecentFlight, getFilteredFlight };"],"sourceRoot":""}